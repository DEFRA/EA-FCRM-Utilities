<Activity mc:Ignorable="sap sap2010" x:Class="Getcredentials" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/credentials" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sn="clr-namespace:System.Net;assembly=System" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OUT_credBT" Type="OutArgument(sn:NetworkCredential)" />
    <x:Property Name="OUT_credLSBUD" Type="OutArgument(sn:NetworkCredential)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>902,1209</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="19">
      <x:String>System.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="12">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get credentials" sap:VirtualizedContainerService.HintSize="526,1104" sap2010:WorkflowViewState.IdRef="Sequence_33">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="secPassword" />
      <Variable x:TypeArguments="x:Boolean" Name="booCredentialResult" />
      <Variable x:TypeArguments="x:String" Name="strUsername" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:GetSecureCredential CredentialType="Generic" DisplayName="Get BT Credentials" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="GetSecureCredential_1" Password="[secPassword]" PersistanceType="LocalComputer" Result="[booCredentialResult]" Target="RobotBT" Username="[strUsername]" />
    <If Condition="[booCredentialResult = False]" DisplayName="If failed to get credential" sap:VirtualizedContainerService.HintSize="484,324" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Request and Store" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_32">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p:RequestCredential Password="{x:Null}" DisplayName="Request Credentials" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RequestCredential_1" Message="Please provide the login information for BT" PasswordSecureString="[secPassword]" Title="Login details required." Username="[strUsername]" />
          <p:AddCredential Password="{x:Null}" CredentialType="Generic" DisplayName="Add Credentials" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddCredential_1" PasswordSecureString="[secPassword]" PersistanceType="LocalComputer" Target="RobotBT" Username="[strUsername]" />
        </Sequence>
      </If.Then>
    </If>
    <Assign DisplayName="Store as credential" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_64">
      <Assign.To>
        <OutArgument x:TypeArguments="sn:NetworkCredential">[OUT_credBT]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sn:NetworkCredential">[new system.net.NetworkCredential(strUsername, secPassword)]</InArgument>
      </Assign.Value>
    </Assign>
    <p:GetSecureCredential CredentialType="Generic" DisplayName="Get LSBUD Credentials" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="GetSecureCredential_2" Password="[secPassword]" PersistanceType="LocalComputer" Result="[booCredentialResult]" Target="RobotLSBUD" Username="[strUsername]" />
    <If Condition="[booCredentialResult = False]" DisplayName="If failed to get credential" sap:VirtualizedContainerService.HintSize="484,324" sap2010:WorkflowViewState.IdRef="If_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Request and Store" sap:VirtualizedContainerService.HintSize="242,176" sap2010:WorkflowViewState.IdRef="Sequence_34">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <p:RequestCredential Password="{x:Null}" DisplayName="Request Credentials" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="RequestCredential_2" Message="Please provide the login information for LSBUD" PasswordSecureString="[secPassword]" Title="Login details required." Username="[strUsername]" />
          <p:AddCredential Password="{x:Null}" CredentialType="Generic" DisplayName="Add Credentials" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddCredential_2" PasswordSecureString="[secPassword]" PersistanceType="LocalComputer" Target="RobotLSBUD" Username="[strUsername]" />
        </Sequence>
      </If.Then>
    </If>
    <Assign DisplayName="Store as credential" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_66">
      <Assign.To>
        <OutArgument x:TypeArguments="sn:NetworkCredential">[OUT_credLSBUD]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sn:NetworkCredential">[new system.net.NetworkCredential(strUsername, secPassword)]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>